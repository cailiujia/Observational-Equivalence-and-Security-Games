theory PASS
begin
builtins: hashing,asymmetric-encryption,xor
functions: enc/2,dec/2,pk/1
equations: dec(enc(x,pk(k)),k)=x

rule register:
    [ Fr(~sk) ]
  --[ Init_once('1') ]->
    [ Out(pk(~sk)),!UseKey(~sk) ]

rule Attack:
let
	c=enc(~m,pk(k)) XOR ~r
in
    [ !UseKey(k),Fr(~m),Fr(~r)]
  --[ Init_once('3'),Select(~m) ]->
    [ Out(c) ]


restriction Init:
" 
   All a #i #j. Init_once(a)@i & Init_once(a)@j ==> #i=#j
"

lemma Guess:
"
	All #i m. Select(m) @ i ==> not (Ex #r. K(m) @ r)
"

end
