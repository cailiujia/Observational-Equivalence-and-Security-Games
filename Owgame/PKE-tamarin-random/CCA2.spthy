theory CCA
begin

builtins: hashing,asymmetric-encryption
functions: enc/3,dec/2,pk/1
equations: dec(enc(x,pk(k),r),k)=x
//flase
rule register:
    [ Fr(~sk) ]
  --[ Init_once('1') ]->
    [ Out(pk(~sk)),!UseKey(~sk) ]

rule Attack:
    [ !UseKey(k),Fr(~m),Fr(~r)]
  --[ Init_once('3'),Select(~m) ]->
    [ Out(enc(~m,pk(k),~r)) ,State(~m)]


rule Attacker_DECoracle_after:
    [ In(enc(x,pk(key),r)),!UseKey(key),State(m) ]
  --[ Init_once('2'),Neq(x,m) ]->
    [ Out(x) ]



restriction Neq:
"
    All x #i. Neq(x,x) @ i ==> F
"

restriction Init:
" 
   All a #i #j. Init_once(a)@i & Init_once(a)@j ==> #i=#j
"

lemma Guess:
"
  All #i m. Select(m) @ i ==> not (Ex #r. K(m) @ r)
"

end
