theory IND_CCA
begin

builtins: xor,diffie-hellman

functions: PRF/2

rule Setup:
    [ Fr(~k) ]
  --[ Init_once('1') ]->
    [ !UseKey(~k) ]

rule Select:
    [Fr(~m1),Fr(~m2)]
  --[Init_once('2') ]->
    [ Choose(~m1,~m2),Out(<~m1,~m2>) ]

rule Attack_diff:
let
  KR1 = PRF(k,~r1)
  c1 = m1^KR1
  KR2 = PRF(k,~r2)
  c2 = m2^KR2
in
    [ !UseKey(k),Choose(m1,m2),Fr(~r1),Fr(~r2) ]
  --[ Init_once('3'),Time2() ]->
    [ Out(diff(c1, c2) ),!State(m1,m2,~r1,~r2) ]

rule Attacker_ENCoracle:
    [ In(m),!UseKey(k),Fr(~r)]
  --[  ]->
    [ Out(m^PRF(k,~r)),State2(~r) ]
    

rule Attacker_DECoracle2:
    [ 
      !State(m1,m2,r1,r2),
      In(x),
      State2(r),
      !UseKey(k)
    ]
  --[ 
      Neq(m1^PRF(k,r1),x),
      Neq(m2^PRF(k,r2),x),
      Init_once('D2') 
     ]->
    [ 
      Out(x^inv(PRF(k,r1))), 
      Out(x^inv(PRF(k,r2))),
      Out(x^inv(PRF(k,r)))
    ]


restriction Neq:
"
    All x #i. Neq(x,x) @ i ==> F
"

restriction Init:
" 
   All #i #j x. Init_once(x)@i & Init_once(x)@j ==> #i=#j
"



end