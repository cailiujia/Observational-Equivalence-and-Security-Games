theory CCA
begin
functions: enc/3,dec/2,pk/1
// functions: enc/3,dec/2[private],pk/1[private]
//equations: dec(enc(x,pk(y),r),y)=x

rule register:
    [ Fr(~sk) ]
  --[ Init_once('1') ]->
    [ Out(pk(~sk)),!Key(~sk) ]

rule Attacker_DECoracle:
    [ In(enc(x,pk(key),r)),!Key(key) ]
  --[ Time1() ]->
    [ Out(x) ]

rule Attack_diff:
    [ !Key(sk),In(m1),In(m2),Fr(~r1),Fr(~r2) ]
  --[ Neq(m1,m2),Time2(),Init_once('3') ]->
    [ Out(diff(enc(m1,pk(sk),~r1),~r2 ) ),State(m1,m2) ]

restriction Time:
"
	All #i #j. Time1()@i & Time2()@j ==> #i<#j
"

restriction Neq:
"
    All x #i. Neq(x,x) @ i ==> F
"

restriction Init:
" 
   All a #i #j. Init_once(a)@i & Init_once(a)@j ==> #i=#j
"

end
