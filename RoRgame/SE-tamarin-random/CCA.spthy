theory game_RoR_CCA_sym
begin

functions: enc/3,dec/2
equations:dec(enc(x,k,r),k)=x

rule Setup:
    [ Fr(~k) ]
  --[ Init_once('1') ]->
    [ !UseKey(~k) ]

rule Select:
    [Fr(~m1)]
  --[Init_once('2') ]->
    [ Choose(~m1),Out(~m1) ]


rule Attack_diff:
let
  c1=enc(m1,k,~r1)
  c2=enc(~r,k,~r2)
in
    [ !UseKey(k),Choose(m1) ,Fr(~r),Fr(~r1),Fr(~r2)]
  --[ Init_once('3') ]->
    [ Out(diff(c1,c2 ) ),State(c1,c2,~r1,~r2)]

rule Attacker_ENCoracle:
    [ In(m),!UseKey(k),Fr(~r)]
  --[  ]->
    [ Out(enc(m,k,~r)) ]

rule Attacker_DECoracle2:
let
	c=enc(m,k,r)
in
    [ State(c1,c2,~r1,~r2),In(c),!UseKey(k)]
  --[ Neq(c,c1),Neq(c,c2)]->
    [ Out(m) ]

restriction Neq:
"
    All x #i. Neq(x,x) @ i ==> F
"

restriction Init:
" 
   All #i #j x. Init_once(x)@i & Init_once(x)@j ==> #i=#j
"

end