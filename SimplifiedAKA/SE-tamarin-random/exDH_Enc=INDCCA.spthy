theory exDH_EncINDCCA
begin

functions: enc/2,dec/2,PRF/2,h/1,hk/2
equations: dec(enc(x,PRF(k,r)),k)=x

      

rule create_identity:
[]-->[!Id($C)]

rule Init:
 [Fr(~k),!Id($A),!Id($B)]
--[Only_once()]->
 [!A1(~k,$A),!B1(~k,$B)]


rule A1:
 let c = enc(~na,PRF(k,~r1))
 in
 [!A1(k,$A),!Id($B),Fr(~na),Fr(~r1)]
--[A1_done()]->
 [Out(<$A,$B,c>),A1_state($A,$B,~na),B1_me(~r1)]

rule B1:
 let 
      na= dec(enc(nak,PRF(k,r1)),k)
      c = enc(~nb,PRF(k,~r2))
 in
 [!B1(k,$B),!Id($A),Fr(~nb),In(<$A,$B,nak>),A1_state($A,$B,~na),B1_me(r1),Fr(~r2)]
--[B1_done()]->
 [B1_state($A,$B,~nb,na),Out(<$A,$B,c,h(na)>),A1_me(~r2)]

rule A2:
 let 
    nb = dec(enc(nbk,PRF(k,r2)),k)
    K_share = hk(na,nb)
 in
 [A1_state($A,$B,na),In(<$A,$B,nbk,Ver>),!A1(k,$A),A1_me(r2)]
--[
 A2_done(),
 Eq(Ver,h(na)),
 A_Secret($A,$B,K_share),
 A_Secret_na($A,$B,na)
 ]->
 [Out(<$A,$B,h(nb)>)]

rule B2:
let 
     K_share = hk(na,nb)
in 
 [B1_state($A,$B,nb,na),In(<$A,$B,Ver>)]
--[
 B2_done(),
 Eq(Ver,h(nb)),
 B_Secret($A,$B,K_share),
 B_Secret_nb($A,$B,nb)
 ]->
 []


restriction once:
        " All  #i #j. Only_once()@i & Only_once()@j ==> #i = #j "

restriction equality:
  "∀ x y #i. (Eq( x, y ) @ #i) ⇒ (x = y)"

lemma can_be_run:  
    exists-trace  
     "  
   (Ex C S secret #i #j .  
   (A_Secret(C, S, secret) @ #i ) &  
   ( B_Secret(C, S, secret) @ #j ) )  
     " 

lemma A_secrecy_na: 
   "All C S x #i. 
    A_Secret_na(C, S,x) @i ==> not (Ex #j. K(x)@j)" 


 end 